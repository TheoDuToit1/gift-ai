/* Hero CTA Button - Independent from Contact Button */
.hero-cta-button {
  --primary: #FF6B35; /* Vibrant Orange for better visibility */
  --neutral-1: #f7fafc;
  --neutral-2: #e2e8f0;
  --radius: 14px;

  cursor: pointer;
  border-radius: var(--radius);
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);
  border: none;
  box-shadow: 0 0.5px 0.5px 1px rgba(255, 255, 255, 0.2),
    0 10px 20px rgba(0, 0, 0, 0.2), 0 4px 5px 0px rgba(0, 0, 0, 0.05);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  transition: all 0.3s ease;
  min-width: 200px;
  padding: 20px;
  height: 68px;
  font-family: "Galano Grotesque", Poppins, Montserrat, sans-serif;
  font-style: normal;
  font-size: 18px;
  font-weight: 600;
}
/* Optional small size variant - use with className "hero-cta-sm" */
.hero-cta-button.hero-cta-sm {
  min-width: 160px;
  height: 56px;
  padding: 14px 16px;
  font-size: 16px;
}
/* Extra small size variant - more compact than sm */
.hero-cta-button.hero-cta-xs {
  min-width: 130px;
  height: 44px;
  padding: 10px 12px;
  font-size: 14px;
}
/* Adjust icon and text spacing for xs */
.hero-cta-button.hero-cta-xs .hero-state {
  padding-left: 24px;
}
.hero-cta-button.hero-cta-xs .hero-state .hero-icon {
  transform: scale(1);
}
.hero-cta-button.hero-cta-xs .hero-state--sent .hero-icon {
  transform: scale(1);
}
/* Optional fixed width variant - prevents width change on text/state switch */
.hero-cta-button.hero-cta-fixed {
  width: 220px; /* keep width stable during animation */
}
/* Optional wider fixed width variant */
.hero-cta-button.hero-cta-wide {
  width: 260px;
}
/* Optional green text variant - forces text to use the same green as icons */
.hero-cta-button.hero-cta-green .hero-state p {
  color: var(--primary);
}
.hero-cta-button.hero-cta-green .hero-state--sent p {
  color: var(--primary);
}

/* Optional fast animation variant - speeds up letter entrance/hover/sent animations */
.hero-cta-button.hero-cta-fast .hero-state p span {
  /* Default entrance */
  animation-duration: 0.5s;
  animation-delay: calc(var(--i) * 0.015s);
}
.hero-cta-button.hero-cta-fast:hover p span {
  /* Hover wave */
  animation-duration: 0.35s;
  animation-delay: calc(var(--i) * 0.01s);
}
.hero-cta-button.hero-cta-fast:focus p span {
  /* Disappear on focus (switching to sent) */
  animation-duration: 0.4s;
  animation-delay: calc(var(--i) * 0.015s);
}
.hero-cta-button.hero-cta-fast:focus .hero-state--sent span {
  /* Sent state entrance */
  animation-duration: 0.5s;
  animation-delay: calc(var(--i) * 0.08s);
}

/* Optional left alignment variant - pull sent state content to the left (only when focused) */
.hero-cta-button.hero-cta-left:focus .hero-state--sent {
  justify-content: flex-start; /* align icon + text to the left */
  padding-left: 10px; /* shift only the sent state */
}
.hero-cta-button.hero-cta-left .hero-state--sent .hero-icon {
  margin-right: 4px; /* even tighter spacing */
}
.hero-cta-button:hover {
  transform: scale(1.02);
  box-shadow: 0 0 1px 2px rgba(255, 255, 255, 0.3),
    0 15px 30px rgba(0, 0, 0, 0.3), 0 10px 3px -3px rgba(0, 0, 0, 0.04);
}
.hero-cta-button:active {
  transform: scale(1);
  box-shadow: 0 0 1px 2px rgba(255, 255, 255, 0.3),
    0 10px 3px -3px rgba(0, 0, 0, 0.2);
}
.hero-cta-button:after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: var(--radius);
  border: 2.5px solid transparent;
  background: linear-gradient(var(--neutral-1), var(--neutral-2)) padding-box,
    linear-gradient(to bottom, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.45))
      border-box;
  z-index: 0;
  transition: all 0.4s ease;
}
.hero-cta-button:hover::after {
  transform: scale(1.05, 1.1);
  box-shadow: inset 0 -1px 3px 0 rgba(255, 255, 255, 1);
}
.hero-cta-button::before {
  content: "";
  inset: 7px 6px 6px 6px;
  position: absolute;
  background: linear-gradient(to top, var(--neutral-1), var(--neutral-2));
  border-radius: 30px;
  filter: blur(0.5px);
  z-index: 2;
}
.hero-state p {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--primary);
}
.hero-state .hero-icon {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  margin: auto;
  transform: scale(1.25);
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}
.hero-state .hero-icon svg {
  overflow: visible;
}

/* Outline */
.hero-outline {
  position: absolute;
  border-radius: inherit;
  overflow: hidden;
  z-index: 1;
  opacity: 0;
  transition: opacity 0.4s ease;
  inset: -2px -3.5px;
}
.hero-outline::before {
  content: "";
  position: absolute;
  inset: -100%;
  background: conic-gradient(
    from 180deg,
    transparent 60%,
    white 80%,
    transparent 100%
  );
  animation: hero-spin 2s linear infinite;
  animation-play-state: paused;
}
@keyframes hero-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.hero-cta-button:hover .hero-outline {
  opacity: 1;
}
.hero-cta-button:hover .hero-outline::before {
  animation-play-state: running;
}

/* Letters */
.hero-state p span {
  display: inline-block;
  opacity: 0;
  animation: hero-slideDown 0.8s ease forwards calc(var(--i) * 0.03s);
}
.hero-cta-button:hover p span {
  opacity: 1;
  animation: hero-wave 0.5s ease forwards calc(var(--i) * 0.02s);
}
.hero-cta-button:focus p span {
  opacity: 1;
  animation: hero-disapear 0.6s ease forwards calc(var(--i) * 0.03s);
}
@keyframes hero-wave {
  30% {
    opacity: 1;
    transform: translateY(4px) translateX(0) rotate(0);
  }
  50% {
    opacity: 1;
    transform: translateY(-3px) translateX(0) rotate(0);
    color: var(--primary);
  }
  100% {
    opacity: 1;
    transform: translateY(0) translateX(0) rotate(0);
  }
}
@keyframes hero-slideDown {
  0% {
    opacity: 0;
    transform: translateY(-20px) translateX(5px) rotate(-90deg);
    color: var(--primary);
    filter: blur(5px);
  }
  30% {
    opacity: 1;
    transform: translateY(4px) translateX(0) rotate(0);
    filter: blur(0);
  }
  50% {
    opacity: 1;
    transform: translateY(-3px) translateX(0) rotate(0);
  }
  100% {
    opacity: 1;
    transform: translateY(0) translateX(0) rotate(0);
  }
}
@keyframes hero-disapear {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    transform: translateX(5px) translateY(20px);
    color: var(--primary);
    filter: blur(5px);
  }
}

/* Plane */
.hero-state--default .hero-icon svg {
  animation: hero-land 0.6s ease forwards;
  color: #FF6B35; /* Vibrant Orange for airplane icon */
}
.hero-cta-button:hover .hero-state--default .hero-icon {
  transform: rotate(45deg) scale(1.25);
}
.hero-cta-button:focus .hero-state--default svg {
  animation: hero-takeOff 0.8s linear forwards;
}
.hero-cta-button:focus .hero-state--default .hero-icon {
  transform: rotate(0) scale(1.25);
}
@keyframes hero-takeOff {
  0% {
    opacity: 1;
  }
  60% {
    opacity: 1;
    transform: translateX(70px) rotate(45deg) scale(2);
  }
  100% {
    opacity: 0;
    transform: translateX(160px) rotate(45deg) scale(0);
  }
}
@keyframes hero-land {
  0% {
    transform: translateX(-60px) translateY(30px) rotate(-50deg) scale(2);
    opacity: 0;
    filter: blur(3px);
  }
  100% {
    transform: translateX(0) translateY(0) rotate(0);
    opacity: 1;
    filter: blur(0);
  }
}

/* Contrail */
.hero-state--default .hero-icon:before {
  content: "";
  position: absolute;
  top: 50%;
  height: 2px;
  width: 0;
  left: -5px;
  background: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.5));
}
.hero-cta-button:focus .hero-state--default .hero-icon:before {
  animation: hero-contrail 0.8s linear forwards;
}
@keyframes hero-contrail {
  0% {
    width: 0;
    opacity: 1;
  }
  8% {
    width: 15px;
  }
  60% {
    opacity: 0.7;
    width: 80px;
  }
  100% {
    opacity: 0;
    width: 160px;
  }
}

/* States */
.hero-state {
  padding-left: 29px;
  z-index: 2;
  display: flex;
  position: relative;
}
.hero-state--sent {
  display: none;
  align-items: center;
  justify-content: center;
}
.hero-state--sent .hero-icon {
  position: relative;
  left: auto;
  top: auto;
  bottom: auto;
  margin: 0;
  margin-right: 8px;
  transform: scale(1.25);
  display: flex;
  align-items: center;
  justify-content: center;
}
.hero-state--sent svg {
  color: #FF6B35; /* Vibrant Orange for checkmark */
}
.hero-cta-button:focus .hero-state--default {
  position: absolute;
}
.hero-cta-button:focus .hero-state--sent {
  display: flex;
}
.hero-cta-button:focus .hero-state--sent span {
  opacity: 0;
  animation: hero-slideDown 0.8s ease forwards calc(var(--i) * 0.2s);
}
.hero-cta-button:focus .hero-state--sent .hero-icon svg {
  opacity: 0;
  animation: hero-appear 1.2s ease forwards 0.8s;
}
@keyframes hero-appear {
  0% {
    opacity: 0;
    transform: scale(4) rotate(-40deg);
    color: var(--primary);
    filter: blur(4px);
  }
  30% {
    opacity: 1;
    transform: scale(0.6);
    filter: blur(1px);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
    filter: blur(0);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Secondary Button Variant - Different Color Scheme */
.hero-cta-button.hero-cta-secondary {
  --primary: #4a5568; /* UbuntuGift secondary - dignified gray */
  --neutral-1: #f7fafc;
  --neutral-2: #e2e8f0;
}

.hero-cta-button.hero-cta-secondary:after {
  background: linear-gradient(var(--neutral-1), var(--neutral-2)) padding-box,
    linear-gradient(to bottom, rgba(74, 85, 104, 0.1), rgba(74, 85, 104, 0.45))
      border-box;
}

.hero-cta-button.hero-cta-secondary .hero-state--default .hero-icon svg {
  color: #4a5568; /* UbuntuGift secondary - dignified gray for airplane icon */
}

.hero-cta-button.hero-cta-secondary .hero-state--sent svg {
  color: #4a5568; /* UbuntuGift secondary - dignified gray for checkmark icon */
}
